// define the border color, gap, and padding value in your variable
$gap : 4vh;
$padding : 4vh;
$color : #48CAE4;

// define various screen breakpoints in the SCSS map
// [mobile, tablet, and desktop] are keys and the pixels are values.
$bp : (
    mobile : 480px,
    tablet : 768px,
    desktop : 1440px,
);

// To save time and code, when defining media queries we'll use mixins and loop the breakpoints we defined above.
@mixin query($display){
    @each $key, $value in $bp{
        @if ($display == $key){
            @media (max-width: $value){@content}
        }
    }
}

* {
    margin:0px;
    padding: 0px;
    box-sizing: border-box;

    body{
        width: 100%;
        min-height: 100vh;
        font-family: sans-serif;
        font-size: 45px;
    }
}

.container{
    display: flex;
    flex-direction: column;
    gap: $gap;
    padding: $padding;
    border: 1vh solid $color;
}

[class ^="block-"]{
    display: flex;
    flex-direction: row;
    height: (100vh-2vh -$gap*2-$padding*2)/3;
    gap:$gap;
    @include query(mobile){
        flex-direction: column;
        height: 500px;
    }
}

[class ^="box-"]{
  
    // To set the text at center of every box
      display: flex;
      justify-content: center;
      align-items: center;
      
    // To divide spaces among the boxes
    // try flex-gap:1; you can see the difference.
    // flex-grow: 1; // 1+1+1 =3 => 1/3 X 100% => 33.33% each
    
      flex-basis: (100%)/3; // 33.33% each
      border : 2px solid black;
      border-radius: 10px;
      background-color: #c1c1c1;
    }